language: cpp

addons:
  apt:
    update: true

matrix:
  include:
    - os: osx
      compiler: clang
      env: 
        - N=osx-clang
      script:
        - python ./build/build_helper.py --travis-ci --compiler-type clang
    - os: linux
      compiler: clang
      dist: precise
      addons:
        apt:
          sources:
            - ubuntu-toolchain-r-test
            - llvm-toolchain-precise-3.7
          packages:
            - clang-3.7
      env: 
        - N=clang-3.7
      script:
        - python ./build/build_helper.py --travis-ci --compiler-exec-like clang++-3.7
    - os: linux
      compiler: clang
      dist: precise
      addons:
        apt:
          sources:
            - ubuntu-toolchain-r-test
            - llvm-toolchain-precise-3.8
          packages:
            - clang-3.8
      env: 
        - N=clang-3.8
      script:
        - python ./build/build_helper.py --travis-ci --compiler-exec-like clang++-3.8
    - os: linux
      compiler: clang
      dist: trusty
      addons:
        apt:
          sources:
            - ubuntu-toolchain-r-test
            - llvm-toolchain-trusty-4.0
          packages:
            - clang-4.0
      env: 
        - N=clang++-4.0
      script:
        - python ./build/build_helper.py --travis-ci --compiler-exec-like clang++-4
    - os: linux
      compiler: clang
      dist: trusty
      addons:
        apt:
          sources:
            - ubuntu-toolchain-r-test
            - llvm-toolchain-trusty-5.0
          packages:
            - clang-5.0
      env: 
        - N=clang++-5.0
      script:
        - python ./build/build_helper.py --travis-ci --compiler-exec-like clang++-5
    - os: linux
      compiler: clang
      dist: trusty
      addons:
        apt:
          sources:
            - ubuntu-toolchain-r-test
            - llvm-toolchain-trusty-6.0
          packages:
            - clang-6.0
      env: 
        - N=clang++-6.0 sanitizer-no
      script:
        - python ./build/build_helper.py --travis-ci --compiler-exec-like clang++-6 --sanitizer no
    - os: linux
      compiler: clang
      dist: trusty
      addons:
        apt:
          sources:
            - ubuntu-toolchain-r-test
            - llvm-toolchain-trusty-6.0
          packages:
            - clang-6.0
      env: 
        - N=clang++-6.0 sanitizer-yes
      script:
        - python ./build/build_helper.py --travis-ci --compiler-exec-like clang++-6 --sanitizer yes
    - os: linux
      compiler: gcc
      dist: trusty
      addons:
        apt:
          sources:
            - ubuntu-toolchain-r-test
          packages:
            - g++-4.8
            - g++-4.8-multilib
      env: 
        - N=g++-4.8
      script:
        - python ./build/build_helper.py --travis-ci --compiler-exec-like g++-4
    - os: linux
      compiler: gcc
      dist: trusty
      addons:
        apt:
          sources:
            - ubuntu-toolchain-r-test
          packages:
            - g++-5
            - g++-5-multilib
      env: 
        - N=g++-5
      script:
        - python ./build/build_helper.py --travis-ci --compiler-exec-like g++-5
    - os: linux
      compiler: gcc
      dist: trusty
      addons:
        apt:
          sources:
            - ubuntu-toolchain-r-test
          packages:
            - g++-6
            - g++-6-multilib
      env: 
        - N=g++-6
      script:
        - python ./build/build_helper.py --travis-ci --compiler-exec-like g++-6
    - os: linux
      compiler: gcc
      dist: trusty
      addons:
        apt:
          sources:
            - ubuntu-toolchain-r-test
          packages:
            - g++-7
            - g++-7-multilib
      env: 
        - N=g++-7
      script:
        - python ./build/build_helper.py --travis-ci --compiler-exec-like g++-7
        - pip install --user cpp-coveralls
        - ./out/.bin/gn gen out/coveralls --args="is_debug=true is_generate_test_coverage=true compiler_type=\"gcc\" compiler_exec=\"g++-7\" std_version=\"c++17\""
        - ./out/.bin/ninja -C out/coveralls
        - coveralls -t $COVERALLS_REPO_TOKEN -e performance -e test -b out/coveralls

before_install:
  - python --version
  - ls -all /usr/bin/ | grep ++
